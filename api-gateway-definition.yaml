---
swagger: "2.0"
info:
  version: "1.0"
  title: "serverless-swagger-ui"
schemes:
- "https"
paths:
  /api-docs:
    get:
      responses: {}
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/${swagger_ui_handler_arn}/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "aws_proxy"
  /api-docs/{proxy+}:
    get:
      parameters:
      - name: "proxy"
        in: "path"
        required: true
        type: "string"
      responses: {}
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/${swagger_ui_handler_arn}/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "aws_proxy"
  /orders:
    get:
      produces:
      - "application/json"
      parameters:
      - name: "orderDate"
        in: "query"
        required: false
        type: "string"
      - name: "userid"
        in: "query"
        required: false
        type: "string"
      responses:
        "200":
          description: "200 response"
          schema:
            $ref: "#/definitions/ordersResponse"
      x-amazon-apigateway-integration:
        uri: "arn:aws:apigateway:eu-central-1:lambda:path/2015-03-31/functions/${orders_handler_arn}/invocations"
        httpMethod: "POST"
        passthroughBehavior: "when_no_match"
        timeoutInMillis: 29000
        type: "aws_proxy"
definitions:
  ordersDataObject:
    type: "object"
    properties:
      user:
        type: "string"
      shippingAddress:
        type: "string"
      invoiceAddress:
        type: "string"
      orderDate:
        type: "string"
        format: "date"
    title: "Orders Data Object"
  ordersQueryParameters:
    type: "object"
    properties:
      userid:
        type: "string"
      orderDate:
        type: "string"
        format: "date"
    title: "Orders Query Parameters"
  ordersResponse:
    type: "object"
    properties:
      orders:
        type: "array"
        items:
          $ref: "#/definitions/ordersResponseObject"
      queryParameters:
        $ref: "#/definitions/ordersQueryParameters"
    title: "Orders Response"
  ordersResponseObject:
    type: "object"
    properties:
      orderId:
        type: "number"
      data:
        $ref: "#/definitions/ordersDataObject"
    title: "Orders Response Object"
